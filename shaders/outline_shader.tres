[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform sampler2D tex;
const vec2 px = vec2(0.005, 0.005);

float sample(in vec2 st){
	return texture(tex, st).a;
}

void fragment(){
	
	float neighbor = 
		sample(UV+px*vec2( 1.,  0.))+
		sample(UV+px*vec2( 0.,  1.))+
		sample(UV+px*vec2(-1.,  0.))+
		sample(UV+px*vec2( 0., -1.));
	
	float center = sample(UV)*4.;
	
	float edge = clamp(center-neighbor, 0., 1.);
	
	if (edge > 0.) {
		float val = float(int(mod(cos(TIME/8.)+UV.x-UV.y,1.)*50.)%2);
		COLOR = vec4(val, val, val, 1.);
	}
	else 
	{
		COLOR = vec4(0., 0., 0., 0.)
	}
	
}"
